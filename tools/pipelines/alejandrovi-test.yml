# Copyright (c) Microsoft Corporation and contributors. All rights reserved.
# Licensed under the MIT License.

name: $(Build.BuildId)

pr: none
trigger: none

resources:
  pipelines:
  - pipeline: client   # Name of the pipeline resource
    source: Build - client packages
    trigger:
      branches:
      - release/*
      - main
      - next
      - lts

parameters:
- name: buildVersionToDownload
  type: string
  default: specific
  values:
  - specific
  - latestFromBranch
  - latest

stages:
  - stage: my_stage
    displayName: My stage
    jobs:
      - job: my_job
        displayName: My job
        pool: Small
        variables:
          pipeline: $(resources.pipeline.client.pipelineName)
          buildId: $(resources.pipeline.client.runID)

        steps:
        - checkout: none

        - task: Bash@3
          displayName: Print Parameters
          inputs:
            targetType: 'inline'
            script: |
              echo "
              Variables:
                buildVersionToDownload = ${{ parameters.buildVersionToDownload }}
                pipeline = $(pipeline)
                buildId = $(buildId)
              Build Params
                SourceBranch = $(Build.SourceBranch)
              "

        - task: DownloadPipelineArtifact@2
          displayName: Download test files
          inputs:
            # It seems there's a bug and preferTriggeringPipeline is not respected.
            # We force the behavior by explicitly specifying:
            # - buildVersionToDownload: specific
            # - buildId: <the id of the triggering build>
            # preferTriggeringPipeline: true
            source: specific
            project: internal
            pipeline: $(pipeline)
            buildVersionToDownload: ${{ parameters.buildVersionToDownload }}
            buildId: $(buildId)
            artifact: test-files
            path: $(Pipeline.Workspace)/test-files/
            branchName: $(Build.SourceBranch)   # No effect as long as we have buildVersionToDownload: specific
            allowPartiallySucceededBuilds: true # No effect as long as we have buildVersionToDownload: specific
